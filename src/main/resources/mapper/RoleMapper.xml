<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pn.mapper.RoleMapper">


    <resultMap id="roleResult" type="role">
        <id column="role_id" property="roleId"></id>
        <result column="role_code" property="roleCode"></result>
        <result column="role_name" property="roleName"></result>
        <result column="role_desc" property="roleDesc"></result>
        <result column="role_state" property="roleState"></result>
        <result column="create_by" property="createBy"></result>
        <result column="create_time" property="createTime"></result>
        <result column="update_by" property="updateBy"></result>
        <result column="update_time" property="updateTime"></result>
    </resultMap>
    <insert id="insertRoleAuth">
        insert into role_auth(role_id,auth_id) values
        <foreach collection="authIds" item="authId" separator=",">
            (#{roleId},#{authId})
        </foreach>
    </insert>
    <update id="updateRoleState" >
        update role
            <set>
                <if test="roleState != null">
                    role_state=#{roleState},
                </if>
                <if test="updateBy != null">
                    update_by=#{updateBy},
                </if>
                <if test="updateTime != null">
                    update_time=#{updateTime},
                </if>
                <if test="roleDesc !=null">
                    role_desc=#{roleDesc}
                </if>
            </set>
            where role_id = #{roleId}
    </update>

    <delete id="deleteByRoleIds">
        delete from role where role_id in
        <foreach collection="list" open="(" close=")" separator="," item="roleId">
            #{roleId}
        </foreach>
    </delete>

    <delete id="deleteRoleAuthByRoleIds">
        delete from role_auth where role_id in
        <foreach collection="list" open="(" close=")" separator="," item="roleId">
            #{roleId}
        </foreach>
    </delete>

    <delete id="deleteRoleUserByRoleIds">
        delete from user_role where role_id in
        <foreach collection="list" open="(" close=")" separator="," item="roleId">
            #{roleId}
        </foreach>
    </delete>

    <select id="selectRoleCount" resultType="integer">
        select count(*) from role
        <where>
            <if test="roleName != null and roleName != ''">
                and role_name like concat('%',#{roleName},'%')
            </if>
            <if test="roleCode != null and roleCode != ''">
                and role_code = #{roleCode}
            </if>
            <if test="roleState != null and roleState != ''">
                and role_state = #{roleState}
            </if>
        </where>
    </select>
    <select id="selectRolePage" resultMap="roleResult">
        select * from role
        <where>
            <if test="role.roleName != null and role.roleName != ''">
                and role_name like concat('%',#{role.roleName},'%')
            </if>
            <if test="role.roleCode != null and role.roleCode != ''">
                and role_code like concat('%',#{role.roleCode},'%')
            </if>
            <if test="role.roleState != null and role.roleState != ''">
                and role_state = #{role.roleState}
            </if>
        </where>
        limit #{page.limitIndex},#{page.pageSize}
    </select>

    <select id="selectNotDeleteCount" resultType="java.lang.Integer">
        select count(*) from role where role_state = 1 and role_id in
              <foreach collection="list" open="(" close=")" separator="," item="roleId">
                  #{roleId}
              </foreach>
    </select>

    <select id="findAuthTree" resultType="com.pn.entity.Auth">
        select * from auth_info where
           auth_state = 1
           and auth_id in (select auth_id from role_auth where role_id = #{roleId})
    </select>


</mapper>